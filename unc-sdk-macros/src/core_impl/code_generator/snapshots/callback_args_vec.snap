---
source: unc-sdk-macros/src/core_impl/code_generator/item_impl_info.rs
assertion_line: 181
expression: pretty_print_syn_str(&actual).unwrap()
---
#[cfg(target_arch = "wasm32")]
#[no_mangle]
pub extern "C" fn method() {
    ::unc_sdk::env::setup_panic_hook();
    if ::unc_sdk::env::current_account_id() != ::unc_sdk::env::predecessor_account_id() {
        ::unc_sdk::env::panic_str("Method method is private");
    }
    #[derive(::unc_sdk::serde::Deserialize)]
    #[serde(crate = "::unc_sdk::serde")]
    struct Input {
        y: String,
    }
    let Input { y }: Input = ::unc_sdk::serde_json::from_slice(
            &::unc_sdk::env::input().expect("Expected input since method has arguments."),
        )
        .expect("Failed to deserialize input from JSON.");
    let x: Vec<String> = ::std::iter::Iterator::collect(
        ::std::iter::Iterator::map(
            0..::unc_sdk::env::promise_results_count(),
            |i| {
                let data: ::std::vec::Vec<u8> = match ::unc_sdk::env::promise_result(i) {
                    ::unc_sdk::PromiseResult::Successful(x) => x,
                    _ => {
                        ::unc_sdk::env::panic_str(
                            &::std::format!(
                                "Callback computation {} was not successful", i
                            ),
                        )
                    }
                };
                ::unc_sdk::serde_json::from_slice(&data)
                    .expect("Failed to deserialize callback using JSON")
            },
        ),
    );
    let contract: Hello = ::unc_sdk::env::state_read().unwrap_or_default();
    contract.method(x, y);
}
